---
# tasks file for apigee-opdk-setup-postgres-standby
- name: Stop Postgres
  shell: "{{ apigee_all }} stop"

  #      state: absent
- block:
  - name: Clear the pgdata folder
    become: yes
    file:
      path: "{{ apigee_postgresql_data_dir }}"

  - name: Wait for PG Master
    wait_for:
      host: "{{ pgmaster_ip }}"
      port: 5432
      timeout: 120

  - name: Postgres replication standby
    shell: '/opt/apigee/apigee-service/bin/apigee-service apigee-postgresql setup-replication-on-standby -f {{ target_response_file_path }}'
    register: replication_output

  rescue:
    - name: Check Postgres installation settings on Master
      import_role:
        name: apigee-opdk-settings-postgres
      delegate_to: "pgmaster"

    - name: Update Silent Installation Config for Master
      import_role:
        name: apigee-opdk-setup-silent-installation-config
      delegate_to: "pgmaster"

    - name: Refesh Postgres Component on Master
      import_role:
        name: apigee-opdk-setup-component
      vars:
        profile: 'ps'
      delegate_to: "pgmaster"

    - name: Update Postgres Config on Master
      import_role:
        name: apigee-opdk-setup-postgres-config
      delegate_to: "pgmaster"

    - name: Update Postres Master Configuration on Master
      import_role:
        name: apigee-opdk-setup-postgres-master
      delegate_to: "pgmaster"

    - name: Determine if max_wal_senders value must be updated
      set_fact:
        update_max_wal_settings: "{{ replication_output.stdout is search('number of requested standby connections exceeds max_wal_senders') }}"
      when: replication_output is defined

    - name: Postgres replication standby
      shell: '/opt/apigee/apigee-service/bin/apigee-service apigee-postgresql setup-replication-on-standby -f {{ target_response_file_path }}'
      when: update_max_wal_settings is defined

- name: Start Postgres
  shell: "{{ apigee_all }} start"

- name: Wait for ready
  command: '/opt/apigee/apigee-service/bin/apigee-service apigee-postgresql wait_for_ready'
  when: validate_ready | default(true)
